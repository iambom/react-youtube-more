[{"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx":"1","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js":"2","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\app.jsx":"3","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoList\\VideoList.jsx":"4","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Search\\Search.jsx":"5","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\index.js":"6","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\youtube.js":"7","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoItem\\VideoItem.jsx":"8","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SideMenu\\SideMenu.jsx":"9","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Header\\Header.jsx":"10","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoDetail\\VideoDetail.jsx":"11","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Comments\\Comments.jsx":"12"},{"size":88,"mtime":1609907941391,"results":"13","hashOfConfig":"14"},{"size":219,"mtime":1609907770829,"results":"15","hashOfConfig":"14"},{"size":3917,"mtime":1618140369083,"results":"16","hashOfConfig":"17"},{"size":1073,"mtime":1617949028213,"results":"18","hashOfConfig":"17"},{"size":783,"mtime":1617694434315,"results":"19","hashOfConfig":"17"},{"size":413,"mtime":1617694651794,"results":"20","hashOfConfig":"17"},{"size":2219,"mtime":1618137981408,"results":"21","hashOfConfig":"17"},{"size":3330,"mtime":1617946687426,"results":"22","hashOfConfig":"17"},{"size":313,"mtime":1616038024388,"results":"23","hashOfConfig":"17"},{"size":1064,"mtime":1617695510665,"results":"24","hashOfConfig":"17"},{"size":4647,"mtime":1617709685516,"results":"25","hashOfConfig":"17"},{"size":3734,"mtime":1617709792775,"results":"26","hashOfConfig":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zd24t9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1l44y1o",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\app.jsx",["52","53","54"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoList\\VideoList.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Search\\Search.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\index.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\youtube.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoItem\\VideoItem.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SideMenu\\SideMenu.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoDetail\\VideoDetail.jsx",["55","56","57","58","59","60"],"import React from 'react';\r\nimport Comments from '../Comments/Comments';\r\nimport styles from './VideoDetail.module.css';\r\n\r\nconst VideoDetail = ({video, video : {snippet}, channelLogo, channel, comments, commentsChannelLogos}) => {\r\n    const getViewCount = (count) => {\r\n        const result = count.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        \r\n        return result;\r\n    }\r\n\r\n    const getPublishedTime = () => {\r\n        let writeDay = new Date(snippet.publishedAt);\r\n        let day = writeDay.getDate();\r\n        let month = (writeDay.getMonth()+1);\r\n        let year = writeDay.getFullYear();\r\n        let publishedTime = `${year}. ${month}. ${day}.`\r\n\r\n        return publishedTime;\r\n    }\r\n\r\n    const getSubscriberCount = (count) => {\r\n        let result;\r\n        \r\n        if(count.length <= 4) {\r\n            result = count / 1000 + \"천\";\r\n            if(count.length === 0) {\r\n                result = 0;\r\n            }else if(0 < count.length <=3) {\r\n                result = count;\r\n            }\r\n        }else if( 4 < count.length < 9) {\r\n            result = count / 10000 + \"만\";\r\n        }else if(count.length >= 9) {\r\n            console.log(\"억\")\r\n        }\r\n       return result;\r\n\r\n    }\r\n\r\n    const getLikeCount = (count) => {\r\n        let result;\r\n        \r\n        if(count.length <= 4) {\r\n            if(count.length === 0) {\r\n                result = 0;\r\n            }else if(0 < count.length <=3) {\r\n                result = count;\r\n            }\r\n            result = parseFloat(count / 1000).toFixed(1) + \"천\";\r\n        }else if( 4 < count.length < 9) {\r\n            result = parseFloat(count / 10000).toFixed(0) + \"만\";\r\n        }else if(count.length >= 9) {\r\n            console.log(\"억\")\r\n        }\r\n       return result;\r\n\r\n    }\r\n\r\n    const getDescription = () => {\r\n        const description = snippet.description;\r\n        let urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n        return description.replace(urlRegex, (url) => {\r\n            return `<a href=${url}>${url}</a>`\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.iframe_wrap}>\r\n                <iframe src={`https://www.youtube.com/embed/${video.id}`} title=\"youtube video player\" type=\"text/html\" frameBorder=\"0\" allowFullScreen></iframe>\r\n            </div>\r\n            <p className={styles.title}>{snippet.title}</p>\r\n            <div className={styles.count_wrap}>\r\n                <div className={styles.count_left}>\r\n                    <span>조회수 {getViewCount(video.statistics.viewCount)}회</span>\r\n                    <span>{getPublishedTime()}</span>\r\n                </div>\r\n                <div className={styles.count_right}>\r\n                    <button className={styles.btn_like}><i className=\"fas fa-thumbs-up\"></i><span>{getLikeCount(video.statistics.likeCount)}</span></button>\r\n                    <button className={styles.btn_dislike}><i className=\"fas fa-thumbs-down\"></i><span>{getLikeCount(video.statistics.dislikeCount)}</span></button>\r\n                    <button className={styles.btn_share}><i className=\"fas fa-share\"></i><span>공유</span></button>\r\n                    <button className={styles.btn_save}><i className=\"far fa-plus-square\"></i><span>저장</span></button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.channel_container}>\r\n                <div className={styles.channel_wrap}>\r\n                    <a href=\"#\" className='channelLogo'>\r\n                        <img src={channelLogo} alt=\"channel logo\"/>\r\n                    </a>\r\n                    <div className={styles.channel_info}>\r\n                        <a href=\"\" className={styles.channel_title}>\r\n                            {snippet.channelTitle}\r\n                        </a>\r\n                        {\r\n                            channel.statistics.hiddenSubscriberCount || (\r\n                                <span>구독자 {getSubscriberCount(channel.statistics.subscriberCount)}명</span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <button>구독</button>\r\n                </div>\r\n                \r\n                <div className={styles.description}  dangerouslySetInnerHTML={ {__html:getDescription()}}></div>\r\n            </div>\r\n\r\n            <div className={styles.comment_wrap}>\r\n                <p>댓글 {getViewCount(video.statistics.commentCount)}개</p>\r\n                <Comments comments={comments} commentsChannelLogos={commentsChannelLogos}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoDetail;","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Comments\\Comments.jsx",["61","62","63","64"],{"ruleId":"65","severity":1,"message":"66","line":1,"column":31,"nodeType":"67","messageId":"68","endLine":1,"endColumn":38},{"ruleId":"69","severity":1,"message":"70","line":33,"column":6,"nodeType":"71","endLine":33,"endColumn":15,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":98,"column":6,"nodeType":"71","endLine":98,"endColumn":39,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":29,"column":24,"nodeType":"77","messageId":"78","endLine":29,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":29,"column":39,"nodeType":"77","messageId":"78","endLine":29,"endColumn":41},{"ruleId":"75","severity":1,"message":"76","line":47,"column":24,"nodeType":"77","messageId":"78","endLine":47,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":47,"column":39,"nodeType":"77","messageId":"78","endLine":47,"endColumn":41},{"ruleId":"79","severity":1,"message":"80","line":89,"column":21,"nodeType":"81","endLine":89,"endColumn":57},{"ruleId":"79","severity":1,"message":"80","line":93,"column":25,"nodeType":"81","endLine":93,"endColumn":69},{"ruleId":"65","severity":1,"message":"82","line":54,"column":29,"nodeType":"67","messageId":"68","endLine":54,"endColumn":36},{"ruleId":"65","severity":1,"message":"83","line":55,"column":29,"nodeType":"67","messageId":"68","endLine":55,"endColumn":40},{"ruleId":"79","severity":1,"message":"80","line":60,"column":29,"nodeType":"81","endLine":60,"endColumn":73},{"ruleId":"79","severity":1,"message":"80","line":65,"column":37,"nodeType":"81","endLine":65,"endColumn":81},"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMostPopular'. Either include it or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has a missing dependency: 'infiniteScroll'. Either include it or remove the dependency array.",["85"],"no-mixed-operators","Unexpected mix of '<' and '<='.","BinaryExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'channel' is assigned a value but never used.","'channelLogo' is assigned a value but never used.",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [getMostPopular, youtube]",{"range":"90","text":"91"},"Update the dependencies array to be: [nextPageToken, videos, channels, infiniteScroll]",{"range":"92","text":"93"},[1222,1231],"[getMostPopular, youtube]",[3243,3276],"[nextPageToken, videos, channels, infiniteScroll]"]