[{"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx":"1","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js":"2","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoList\\VideoList.jsx":"3","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Search\\Search.jsx":"4","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\index.js":"5","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\youtube.js":"6","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoItem\\VideoItem.jsx":"7","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SideMenu\\SideMenu.jsx":"8","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Header\\Header.jsx":"9","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoDetail\\VideoDetail.jsx":"10","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Comments\\Comments.jsx":"11","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Main\\Main.jsx":"12","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\Root.js":"13","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\Router.jsx":"14","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SelectedVideo\\SelectedVideo.jsx":"15","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SearchVideoList\\SearchVideoList.jsx":"16","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\common\\getPublishedTime.js":"17"},{"size":88,"mtime":1609907941391,"results":"18","hashOfConfig":"19"},{"size":219,"mtime":1609907770829,"results":"20","hashOfConfig":"19"},{"size":1316,"mtime":1627195319062,"results":"21","hashOfConfig":"22"},{"size":1782,"mtime":1629090712225,"results":"23","hashOfConfig":"22"},{"size":225,"mtime":1625481245806,"results":"24","hashOfConfig":"22"},{"size":2005,"mtime":1629025181857,"results":"25","hashOfConfig":"22"},{"size":1855,"mtime":1628678307175,"results":"26","hashOfConfig":"22"},{"size":658,"mtime":1626700707883,"results":"27","hashOfConfig":"22"},{"size":1029,"mtime":1626700855135,"results":"28","hashOfConfig":"22"},{"size":4629,"mtime":1628666926188,"results":"29","hashOfConfig":"22"},{"size":1754,"mtime":1628678131325,"results":"30","hashOfConfig":"22"},{"size":1873,"mtime":1629116462436,"results":"31","hashOfConfig":"22"},{"size":239,"mtime":1618826347754,"results":"32","hashOfConfig":"22"},{"size":934,"mtime":1629043921904,"results":"33","hashOfConfig":"22"},{"size":3235,"mtime":1629204162025,"results":"34","hashOfConfig":"22"},{"size":2503,"mtime":1629113366165,"results":"35","hashOfConfig":"22"},{"size":1473,"mtime":1628678287856,"results":"36","hashOfConfig":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zd24t9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g3f744",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoList\\VideoList.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Search\\Search.jsx",[],["75","76"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\index.js",[],["77","78"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\youtube.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoItem\\VideoItem.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SideMenu\\SideMenu.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoDetail\\VideoDetail.jsx",["79","80"],"import React, { memo } from 'react';\r\nimport Comments from '../Comments/Comments';\r\nimport styles from './VideoDetail.module.css';\r\n\r\nconst VideoDetail = memo(({video, channel, comments}) => {\r\n    const getViewCount = (count) => {\r\n        const result = count.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        return result;\r\n    };\r\n\r\n    const getPublishedTime = () => {\r\n        let writeDay = new Date(video.snippet.publishedAt);\r\n        let day = writeDay.getDate();\r\n        let month = (writeDay.getMonth()+1);\r\n        let year = writeDay.getFullYear();\r\n        let publishedTime = `${year}. ${month}. ${day}.`;\r\n\r\n        return publishedTime;\r\n    };\r\n\r\n    const getSubscriberCount = (count) => {\r\n        let result;\r\n\r\n        if(count.length <= 4) {\r\n            result = count / 1000 + \"천\";\r\n            if(count.length === 0) {\r\n                result = 0;\r\n            }else if(0 < count.length < 4) {\r\n                result = count;\r\n            }\r\n        }else if( 4 < count.length < 9) {\r\n            result = count / 10000 + \"만\";\r\n        }else if(count.length >= 9) {\r\n            console.log(\"억\")\r\n        }\r\n       return result;\r\n\r\n    };\r\n\r\n    const getLikeCount = (count) => {\r\n        let result;\r\n\r\n        if(count.length < 5) {\r\n            if(count.length === 0) {\r\n                result = 0;\r\n            }else if( count.length === 4) {\r\n                result = parseFloat(count / 1000).toFixed(1) + \"천\";\r\n            }else if(0 < count.length < 4) {\r\n                result = count;\r\n            }\r\n        }else if( 4 < count.length < 9) {\r\n            result = parseFloat(count / 10000).toFixed(0) + \"만\";\r\n        }else if(count.length >= 9) {\r\n            console.log(\"억\")\r\n        }\r\n       return result;\r\n\r\n    };\r\n\r\n    const getDescription = () => {\r\n        const description = video.snippet.description;\r\n        let urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n        return description.replace(urlRegex, (url) => {\r\n            return `<a href=${url}>${url}</a>`\r\n        })\r\n    };\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.iframe_wrap}>\r\n                <iframe src={`https://www.youtube.com/embed/${video.id}`} title=\"youtube video player\" type=\"text/html\" frameBorder=\"0\" allowFullScreen></iframe>\r\n            </div>\r\n            <p className={styles.title}>{video.snippet.title}</p>\r\n            <div className={styles.count_wrap}>\r\n                <div className={styles.count_left}>\r\n                    <span>조회수 {getViewCount(video.statistics.viewCount)}회</span>\r\n                    <span>{getPublishedTime()}</span>\r\n                </div>\r\n                <div className={styles.count_right}>\r\n                    <button className={styles.btn_like}><i className=\"fas fa-thumbs-up\"></i><span>{getLikeCount(video.statistics.likeCount)}</span></button>\r\n                    <button className={styles.btn_dislike}><i className=\"fas fa-thumbs-down\"></i><span>{getLikeCount(video.statistics.dislikeCount)}</span></button>\r\n                    <button className={styles.btn_share}><i className=\"fas fa-share\"></i><span>공유</span></button>\r\n                    <button className={styles.btn_save}><i className=\"far fa-plus-square\"></i><span>저장</span></button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.channel_container}>\r\n                <div className={styles.channel_wrap}>\r\n                    <a href=\"#\" className='channelLogo'>\r\n                        <img src={channel.snippet.thumbnails.default.url} alt=\"channel logo\"/>\r\n                    </a>\r\n                    <div className={styles.channel_info}>\r\n                        <a href=\"\" className={styles.channel_title}>\r\n                            {video.snippet.channelTitle}\r\n                        </a>\r\n                        {\r\n                            channel.statistics.hiddenSubscriberCount || (\r\n                                <span>구독자 {getSubscriberCount(channel.statistics.subscriberCount)}명</span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <button>구독</button>\r\n                </div>\r\n\r\n                <div className={styles.description}  dangerouslySetInnerHTML={ {__html:getDescription()}}></div>\r\n            </div>\r\n\r\n            <div className={styles.comment_wrap}>\r\n                <p>댓글 {getViewCount(video.statistics.commentCount)}개</p>\r\n                <Comments comments={comments}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default VideoDetail;","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Comments\\Comments.jsx",["81","82"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Main\\Main.jsx",["83"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\Root.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\Router.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SelectedVideo\\SelectedVideo.jsx",["84","85"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SearchVideoList\\SearchVideoList.jsx",["86"],"import React, {useEffect, useState, useCallback} from 'react';\r\nimport VideoList from \"../VideoList/VideoList\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SideMenu from \"../SideMenu/SideMenu\";\r\nimport { infiniteScroll } from \"../../common/infiniteScroll\";\r\n\r\nconst SearchVideoList = ({youtube}) => {\r\n  const { search } = useLocation();\r\n\r\n  const [preQuery, setPreQuery] = useState('');\r\n  const [searchedVideos, setSearchedVideos] = useState([]);\r\n  const [searchedChannels, setSearchedChannels] = useState([]);\r\n  const [searchNextPageToken, setSearchNextPageToken] = useState('');\r\n\r\n  const onSearch = useCallback((query, searchNextPageToken) => {\r\n    youtube.search(query, searchNextPageToken).then(result => {\r\n      setPreQuery(query);\r\n      setSearchNextPageToken(result.nextPageToken);\r\n      let videos = result.items;\r\n      let newVideoIdList = [];\r\n      videos.forEach(element => {\r\n        newVideoIdList.push(element.id.videoId);\r\n      });\r\n\r\n      youtube.getVideoList(newVideoIdList).then(videos => {\r\n        let channelIdList = [];\r\n        let newVideoList = [];\r\n        if(preQuery === query) newVideoList = searchedVideos.concat();\r\n        if(preQuery !== query) window.scrollTo(0, 0);\r\n\r\n        videos.forEach(element => {\r\n          channelIdList.push(element.snippet.channelId);\r\n        });\r\n\r\n        newVideoList = [...newVideoList, ...videos];\r\n        setSearchedVideos(newVideoList);\r\n\r\n        youtube.getChannelList(channelIdList).then(channels =>{\r\n          let newChannelList = preQuery !== query ? [] : searchedChannels.concat();\r\n          newChannelList = [...newChannelList, ...channels];\r\n          setSearchedChannels(newChannelList);\r\n        });\r\n      });\r\n    });\r\n  }, [preQuery ,searchedVideos,searchedChannels, youtube ]);\r\n\r\n  const paging = useCallback(() => {\r\n    infiniteScroll(searchNextPageToken, onSearch, preQuery);\r\n  }, [onSearch, searchNextPageToken, preQuery]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", paging);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", paging);\r\n    };\r\n  }, [paging, searchNextPageToken, preQuery, searchedVideos]);\r\n\r\n  useEffect(() => {\r\n    const query = search.split(\"=\")[1];\r\n    onSearch(query);\r\n    return () => {\r\n      setSearchedVideos([])\r\n    }\r\n  }, [search]);\r\n\r\n  return(\r\n    <>\r\n      <SideMenu />\r\n      <VideoList videos={searchedVideos} channels={searchedChannels} display={'list'}/>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default SearchVideoList;","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\common\\getPublishedTime.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":89,"column":21,"nodeType":"95","endLine":89,"endColumn":57},{"ruleId":"93","severity":1,"message":"94","line":93,"column":25,"nodeType":"95","endLine":93,"endColumn":69},{"ruleId":"93","severity":1,"message":"94","line":15,"column":29,"nodeType":"95","endLine":15,"endColumn":73},{"ruleId":"93","severity":1,"message":"94","line":20,"column":37,"nodeType":"95","endLine":20,"endColumn":81},{"ruleId":"96","severity":1,"message":"97","line":50,"column":6,"nodeType":"98","endLine":50,"endColumn":15,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":25,"column":6,"nodeType":"98","endLine":25,"endColumn":15,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":32,"column":6,"nodeType":"98","endLine":32,"endColumn":37,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":64,"column":6,"nodeType":"98","endLine":64,"endColumn":14,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],["106"],["107"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMostPopular'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'getSelectedVideo'. Either include it or remove the dependency array.",["109"],"React Hook useEffect has a missing dependency: 'paging'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has a missing dependency: 'onSearch'. Either include it or remove the dependency array.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [getMostPopular, youtube]",{"range":"120","text":"121"},"Update the dependencies array to be: [getSelectedVideo, videoId]",{"range":"122","text":"123"},"Update the dependencies array to be: [videoNextPageToken, videoList, paging]",{"range":"124","text":"125"},"Update the dependencies array to be: [onSearch, search]",{"range":"126","text":"127"},[1689,1698],"[getMostPopular, youtube]",[978,987],"[getSelectedVideo, videoId]",[1148,1179],"[videoNextPageToken, videoList, paging]",[2310,2318],"[onSearch, search]"]