[{"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx":"1","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js":"2","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\app.jsx":"3","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoList\\VideoList.jsx":"4","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Search\\Search.jsx":"5","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\index.js":"6","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\youtube.js":"7","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoItem\\VideoItem.jsx":"8","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SideMenu\\SideMenu.jsx":"9","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Header\\Header.jsx":"10","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoDetail\\VideoDetail.jsx":"11","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Comments\\Comments.jsx":"12"},{"size":88,"mtime":1609907941391,"results":"13","hashOfConfig":"14"},{"size":219,"mtime":1609907770829,"results":"15","hashOfConfig":"14"},{"size":4965,"mtime":1618658060860,"results":"16","hashOfConfig":"17"},{"size":1187,"mtime":1618658058685,"results":"18","hashOfConfig":"17"},{"size":783,"mtime":1618475516331,"results":"19","hashOfConfig":"17"},{"size":413,"mtime":1617694651794,"results":"20","hashOfConfig":"17"},{"size":2122,"mtime":1618482300886,"results":"21","hashOfConfig":"17"},{"size":3330,"mtime":1617946687426,"results":"22","hashOfConfig":"17"},{"size":744,"mtime":1618398092961,"results":"23","hashOfConfig":"17"},{"size":1064,"mtime":1617695510665,"results":"24","hashOfConfig":"17"},{"size":4647,"mtime":1617709685516,"results":"25","hashOfConfig":"17"},{"size":3734,"mtime":1617709792775,"results":"26","hashOfConfig":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zd24t9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1l44y1o",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\app.jsx",["55","56"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoList\\VideoList.jsx",["57","58"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Search\\Search.jsx",[],["59","60"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\index.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\youtube.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoItem\\VideoItem.jsx",[],["61","62"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SideMenu\\SideMenu.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoDetail\\VideoDetail.jsx",["63","64","65","66","67","68"],"import React from 'react';\r\nimport Comments from '../Comments/Comments';\r\nimport styles from './VideoDetail.module.css';\r\n\r\nconst VideoDetail = ({video, video : {snippet}, channelLogo, channel, comments, commentsChannelLogos}) => {\r\n    const getViewCount = (count) => {\r\n        const result = count.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        \r\n        return result;\r\n    }\r\n\r\n    const getPublishedTime = () => {\r\n        let writeDay = new Date(snippet.publishedAt);\r\n        let day = writeDay.getDate();\r\n        let month = (writeDay.getMonth()+1);\r\n        let year = writeDay.getFullYear();\r\n        let publishedTime = `${year}. ${month}. ${day}.`\r\n\r\n        return publishedTime;\r\n    }\r\n\r\n    const getSubscriberCount = (count) => {\r\n        let result;\r\n        \r\n        if(count.length <= 4) {\r\n            result = count / 1000 + \"천\";\r\n            if(count.length === 0) {\r\n                result = 0;\r\n            }else if(0 < count.length <=3) {\r\n                result = count;\r\n            }\r\n        }else if( 4 < count.length < 9) {\r\n            result = count / 10000 + \"만\";\r\n        }else if(count.length >= 9) {\r\n            console.log(\"억\")\r\n        }\r\n       return result;\r\n\r\n    }\r\n\r\n    const getLikeCount = (count) => {\r\n        let result;\r\n        \r\n        if(count.length <= 4) {\r\n            if(count.length === 0) {\r\n                result = 0;\r\n            }else if(0 < count.length <=3) {\r\n                result = count;\r\n            }\r\n            result = parseFloat(count / 1000).toFixed(1) + \"천\";\r\n        }else if( 4 < count.length < 9) {\r\n            result = parseFloat(count / 10000).toFixed(0) + \"만\";\r\n        }else if(count.length >= 9) {\r\n            console.log(\"억\")\r\n        }\r\n       return result;\r\n\r\n    }\r\n\r\n    const getDescription = () => {\r\n        const description = snippet.description;\r\n        let urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n        return description.replace(urlRegex, (url) => {\r\n            return `<a href=${url}>${url}</a>`\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.iframe_wrap}>\r\n                <iframe src={`https://www.youtube.com/embed/${video.id}`} title=\"youtube video player\" type=\"text/html\" frameBorder=\"0\" allowFullScreen></iframe>\r\n            </div>\r\n            <p className={styles.title}>{snippet.title}</p>\r\n            <div className={styles.count_wrap}>\r\n                <div className={styles.count_left}>\r\n                    <span>조회수 {getViewCount(video.statistics.viewCount)}회</span>\r\n                    <span>{getPublishedTime()}</span>\r\n                </div>\r\n                <div className={styles.count_right}>\r\n                    <button className={styles.btn_like}><i className=\"fas fa-thumbs-up\"></i><span>{getLikeCount(video.statistics.likeCount)}</span></button>\r\n                    <button className={styles.btn_dislike}><i className=\"fas fa-thumbs-down\"></i><span>{getLikeCount(video.statistics.dislikeCount)}</span></button>\r\n                    <button className={styles.btn_share}><i className=\"fas fa-share\"></i><span>공유</span></button>\r\n                    <button className={styles.btn_save}><i className=\"far fa-plus-square\"></i><span>저장</span></button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.channel_container}>\r\n                <div className={styles.channel_wrap}>\r\n                    <a href=\"#\" className='channelLogo'>\r\n                        <img src={channelLogo} alt=\"channel logo\"/>\r\n                    </a>\r\n                    <div className={styles.channel_info}>\r\n                        <a href=\"\" className={styles.channel_title}>\r\n                            {snippet.channelTitle}\r\n                        </a>\r\n                        {\r\n                            channel.statistics.hiddenSubscriberCount || (\r\n                                <span>구독자 {getSubscriberCount(channel.statistics.subscriberCount)}명</span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <button>구독</button>\r\n                </div>\r\n                \r\n                <div className={styles.description}  dangerouslySetInnerHTML={ {__html:getDescription()}}></div>\r\n            </div>\r\n\r\n            <div className={styles.comment_wrap}>\r\n                <p>댓글 {getViewCount(video.statistics.commentCount)}개</p>\r\n                <Comments comments={comments} commentsChannelLogos={commentsChannelLogos}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoDetail;","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Comments\\Comments.jsx",["69","70","71","72"],"import React from 'react';\r\nimport styles from './Comments.module.css';\r\n\r\nconst Comments = ({comments, commentsChannelLogos}) => {\r\n    console.log(comments)\r\n    const getPublishedTime = (publishedAt) => {\r\n        let now = new Date(); \r\n        let writeDay = new Date(publishedAt);\r\n        let answer = '';\r\n        let publishedTime = '';\r\n        if(now.getFullYear() > writeDay.getFullYear()) {\r\n            answer = now.getFullYear() - writeDay.getFullYear();\r\n            publishedTime = `${answer}년 전`\r\n        }else if(now.getMonth() > writeDay.getMonth()) {\r\n            answer = now.getMonth() - writeDay.getMonth();\r\n            publishedTime = `${answer}개월 전`;\r\n        }else if(now.getDate() > writeDay.getDate()) {\r\n            answer = now.getDate() - writeDay.getDate();\r\n            publishedTime = `${answer}일 전`;\r\n        }else if(now.getDate() === writeDay.getDate()){\r\n            let nowTime = now.getTime();\r\n            let writeTime = writeDay.getTime();\r\n            if(nowTime > writeTime) {\r\n                let sec, min, hour, day;\r\n                sec = parseInt(nowTime - writeTime) / 1000;\r\n                day = parseInt(sec/60/60/24);\r\n                sec = (sec - (day * 60 * 60 * 24));\r\n                hour = parseInt(sec/60/60);\r\n                sec = (sec - (hour*60*60));\r\n                min = parseInt(sec/60);\r\n                sec = parseInt(sec-(min*60));\r\n                if(hour > 0) {\r\n                    publishedTime = `${hour}시간 전`;\r\n                }else if(min > 0) {\r\n                    publishedTime = `${min}분 전`;\r\n                }else if(sec > 0) {\r\n                    publishedTime = `${sec}초 전`;\r\n                }\r\n            }\r\n        }\r\n        return publishedTime;\r\n    }\r\n    \r\n    return(\r\n        <ul className={styles.container}>\r\n            {\r\n\r\n                comments.map(comment => {\r\n                    const {authorChannelId , authorProfileImageUrl,authorDisplayName, publishedAt, textDisplay, likeCount} = comment.snippet.topLevelComment.snippet;\r\n\r\n                    let channelLogo, channel;\r\n                    commentsChannelLogos.forEach(element => {\r\n                        if(element.id === authorChannelId.value) {\r\n                            channel = element;\r\n                            channelLogo = element.snippet.thumbnails.default.url;\r\n                        }\r\n                    });\r\n                    return(\r\n                        <li key={comment.id}>\r\n                            <a href=\"#\" className={styles.channel_logo}>\r\n                                <img src={authorProfileImageUrl} alt=\"channel logo\"/>\r\n                            </a>\r\n                            <div className={styles.metadata}>\r\n                                <div className={styles.txt_wrap}>\r\n                                    <a href=\"#\" className={styles.channel_name}>\r\n                                       {authorDisplayName}\r\n                                    </a>\r\n                                    <span>{getPublishedTime(publishedAt)}</span>\r\n                                    <p>{textDisplay}</p>\r\n                                </div>\r\n                                <div className={styles.btn_wrap}>\r\n                                    <button><i className=\"fas fa-thumbs-up\"></i></button>\r\n                                    <span>{likeCount}</span>\r\n                                    <button><i className=\"fas fa-thumbs-down\"></i></button><span></span>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Comments;",{"ruleId":"73","severity":1,"message":"74","line":39,"column":6,"nodeType":"75","endLine":39,"endColumn":15,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":85,"column":6,"nodeType":"75","endLine":85,"endColumn":99,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"83","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":29,"column":24,"nodeType":"92","messageId":"93","endLine":29,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":29,"column":39,"nodeType":"92","messageId":"93","endLine":29,"endColumn":41},{"ruleId":"90","severity":1,"message":"91","line":47,"column":24,"nodeType":"92","messageId":"93","endLine":47,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":47,"column":39,"nodeType":"92","messageId":"93","endLine":47,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":89,"column":21,"nodeType":"96","endLine":89,"endColumn":57},{"ruleId":"94","severity":1,"message":"95","line":93,"column":25,"nodeType":"96","endLine":93,"endColumn":69},{"ruleId":"79","severity":1,"message":"97","line":54,"column":29,"nodeType":"81","messageId":"82","endLine":54,"endColumn":36},{"ruleId":"79","severity":1,"message":"98","line":55,"column":29,"nodeType":"81","messageId":"82","endLine":55,"endColumn":40},{"ruleId":"94","severity":1,"message":"95","line":60,"column":29,"nodeType":"96","endLine":60,"endColumn":73},{"ruleId":"94","severity":1,"message":"95","line":65,"column":37,"nodeType":"96","endLine":65,"endColumn":81},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMostPopular'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a missing dependency: 'infiniteScroll'. Either include it or remove the dependency array.",["100"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],"no-mixed-operators","Unexpected mix of '<' and '<='.","BinaryExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'channel' is assigned a value but never used.","'channelLogo' is assigned a value but never used.",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getMostPopular, youtube]",{"range":"107","text":"108"},"Update the dependencies array to be: [videoNextPageToken, videos, channels, searchedVideos, searchedChannels, searchNextPageToken, infiniteScroll]",{"range":"109","text":"110"},[1517,1526],"[getMostPopular, youtube]",[3018,3111],"[videoNextPageToken, videos, channels, searchedVideos, searchedChannels, searchNextPageToken, infiniteScroll]"]