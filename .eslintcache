[{"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx":"1","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js":"2","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoList\\VideoList.jsx":"3","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Search\\Search.jsx":"4","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\index.js":"5","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\youtube.js":"6","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoItem\\VideoItem.jsx":"7","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SideMenu\\SideMenu.jsx":"8","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Header\\Header.jsx":"9","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoDetail\\VideoDetail.jsx":"10","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Comments\\Comments.jsx":"11","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Main\\Main.jsx":"12","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\Root.js":"13","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\Router.jsx":"14","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SelectedVideo\\SelectedVideo.jsx":"15","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SearchVideoList\\SearchVideoList.jsx":"16","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\infiniteScroll.js":"17"},{"size":88,"mtime":1609907941391,"results":"18","hashOfConfig":"19"},{"size":219,"mtime":1609907770829,"results":"20","hashOfConfig":"19"},{"size":1216,"mtime":1626694455855,"results":"21","hashOfConfig":"22"},{"size":954,"mtime":1626163493155,"results":"23","hashOfConfig":"22"},{"size":225,"mtime":1625481245806,"results":"24","hashOfConfig":"22"},{"size":2005,"mtime":1626346263717,"results":"25","hashOfConfig":"22"},{"size":3390,"mtime":1626693833499,"results":"26","hashOfConfig":"22"},{"size":658,"mtime":1626700707883,"results":"27","hashOfConfig":"22"},{"size":1029,"mtime":1626700855135,"results":"28","hashOfConfig":"22"},{"size":4629,"mtime":1626694307920,"results":"29","hashOfConfig":"22"},{"size":3308,"mtime":1625900170237,"results":"30","hashOfConfig":"22"},{"size":1874,"mtime":1627050199225,"results":"31","hashOfConfig":"22"},{"size":239,"mtime":1618826347754,"results":"32","hashOfConfig":"22"},{"size":934,"mtime":1626177615945,"results":"33","hashOfConfig":"22"},{"size":3288,"mtime":1626693751689,"results":"34","hashOfConfig":"22"},{"size":2444,"mtime":1626169289597,"results":"35","hashOfConfig":"22"},{"size":541,"mtime":1625480761961,"results":"36","hashOfConfig":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zd24t9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g3f744",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoList\\VideoList.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Search\\Search.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\index.js",[],["75","76"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\youtube.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoItem\\VideoItem.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SideMenu\\SideMenu.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\VideoDetail\\VideoDetail.jsx",["77","78"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Comments\\Comments.jsx",["79","80"],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\Main\\Main.jsx",["81","82"],"import React, {useEffect, useState} from 'react';\r\nimport SideMenu from \"../SideMenu/SideMenu\";\r\nimport VideoList from \"../VideoList/VideoList\";\r\nimport {infiniteScroll} from \"../../service/infiniteScroll\";\r\n\r\nconst Main = ({ youtube }) => {\r\n  const [videos, setVideos] = useState([]);\r\n  const [channels, setChannels] = useState([]);\r\n  const [videoNextPageToken, setVideoNextPageToken] = useState('');\r\n\r\n  useEffect(() => {\r\n    getMostPopular();\r\n    return () => {\r\n      // Warning: Can't perform a React state update on an unmounted component... 에러 발생으로 cleanup 추가\r\n      setVideos([]);\r\n      setChannels([]);\r\n      setVideoNextPageToken('');\r\n    }\r\n  }, [youtube]);\r\n\r\n  const paging = () => {\r\n    infiniteScroll(videoNextPageToken, getMostPopular);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", paging);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", paging);\r\n    };\r\n  }, [paging, videoNextPageToken, videos]);\r\n\r\n  const getMostPopular = (videoNextPageToken) => {\r\n    youtube.mostPopular(videoNextPageToken).then(result => {\r\n      setVideoNextPageToken(result.nextPageToken);\r\n      let newVideos = result.items;\r\n      let newChannelIdList = [];\r\n\r\n      newVideos.forEach(element => {\r\n        newChannelIdList.push(element.snippet.channelId);\r\n      });\r\n\r\n      let newVideoList = videos.concat();\r\n      newVideoList = [...newVideoList, ...newVideos];\r\n\r\n      youtube.getChannelList(newChannelIdList).then(newChannels =>{\r\n        let newChannelList = channels.concat();\r\n        newChannelList = [...newChannelList, ...newChannels];\r\n        setChannels(newChannelList);\r\n        \r\n      });\r\n      setVideos(newVideoList);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SideMenu />\r\n      <VideoList videos={videos} channels={channels} display={'list'}/>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Main;","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\Root.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\Router.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SelectedVideo\\SelectedVideo.jsx",["83","84"],"import React, {useEffect, useState} from 'react';\r\nimport VideoDetail from \"../VideoDetail/VideoDetail\";\r\nimport VideoList from \"../VideoList/VideoList\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport styles from './SelectedVideo.module.css';\r\nimport {infiniteScroll} from \"../../service/infiniteScroll\";\r\n\r\nconst SelectedVideo = ({youtube}) => {\r\n\r\n  const { videoId } = useParams();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [preVideoId, setPreVideoId] = useState('');\r\n  const [selectedVideo, setSelectedVideo] = useState([]);\r\n  const [selectedVideoChannel, setSelectedVideoChannel] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [commentsChannelLogos, setCommentsChannelLogos] = useState([]);\r\n\r\n  const [videoList, setVideoList] = useState([]);\r\n  const [channels, setChannels] = useState([]);\r\n  const [videoNextPageToken, setVideoNextPageToken] = useState('');\r\n\r\n  useEffect(() => {\r\n    getSelectedVideo();\r\n  }, [videoId]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", paging);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", paging);\r\n    };\r\n  }, [videoNextPageToken, videoList]);\r\n\r\n  const paging = () => {\r\n    infiniteScroll(videoNextPageToken, getVideoList);\r\n  };\r\n  const getSelectedVideo = () => {\r\n    let data = '';\r\n    let channelId = '';\r\n    let channelData = '';\r\n    youtube.getVideoList(videoId).then(video => {\r\n      data = video[0];\r\n      channelId = data.snippet.channelId;\r\n      setSelectedVideo(data);\r\n      youtube.getChannelList(channelId).then(channel => {\r\n        channelData = channel[0];\r\n        setSelectedVideoChannel(channelData);\r\n      });\r\n      youtube.getCommentList(videoId).then(comments => {\r\n        let channelIdList = [];\r\n        comments.forEach(element => {\r\n          channelIdList.push(element.snippet.topLevelComment.snippet.authorChannelId.value);\r\n        });\r\n        youtube.getChannelList(channelIdList).then(channels => setCommentsChannelLogos(channels));\r\n        setComments(comments);\r\n      });\r\n      setPreVideoId(videoId);\r\n      getVideoList();\r\n      window.scrollTo(0, 0);\r\n    });\r\n  };\r\n\r\n\r\n  const getVideoList = (videoNextPageToken) => {\r\n    youtube.mostPopular(videoNextPageToken).then(result => {\r\n      setVideoNextPageToken(result.nextPageToken);\r\n      let newVideos = result.items;\r\n      let newChannelIdList = [];\r\n      newVideos.forEach(element => {\r\n        newChannelIdList.push(element.snippet.channelId);\r\n      });\r\n      let newVideoList = preVideoId !== videoId ? [] : videoList.concat();\r\n      newVideoList = [...newVideoList, ...newVideos];\r\n\r\n      youtube.getChannelList(newChannelIdList).then(newChannels =>{\r\n        let newChannelList = channels.concat();\r\n        newChannelList = [...newChannelList, ...newChannels];\r\n        setChannels(newChannelList);\r\n        setIsLoading(true);\r\n      });\r\n      setVideoList(newVideoList);\r\n    });\r\n  };\r\n\r\n  return(\r\n    isLoading &&\r\n    <div className={styles.container}>\r\n      <VideoDetail video={selectedVideo} channel={selectedVideoChannel} comments={comments} commentsChannelLogos={commentsChannelLogos}/>\r\n      <VideoList display={'grid'} videos={videoList} channels={channels}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SelectedVideo;","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\components\\SearchVideoList\\SearchVideoList.jsx",["85","86"],"import React, {useEffect, useState, useCallback} from 'react';\r\nimport VideoList from \"../VideoList/VideoList\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SideMenu from \"../SideMenu/SideMenu\";\r\nimport { infiniteScroll } from \"../../service/infiniteScroll\";\r\n\r\nconst SearchVideoList = ({youtube}) => {\r\n  const { search } = useLocation();\r\n\r\n  const [preQuery, setPreQuery] = useState('');\r\n  const [searchedVideos, setSearchedVideos] = useState([]);\r\n  const [searchedChannels, setSearchedChannels] = useState([]);\r\n  const [searchNextPageToken, setSearchNextPageToken] = useState('');\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", paging);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", paging);\r\n    };\r\n  }, [searchNextPageToken, preQuery, searchedVideos]);\r\n\r\n  const paging = () => {\r\n    infiniteScroll(searchNextPageToken, onSearch, preQuery);\r\n  };\r\n\r\n  const onSearch = useCallback((query, searchNextPageToken) => {\r\n    youtube.search(query, searchNextPageToken).then(result => {\r\n      setPreQuery(query);\r\n      setSearchNextPageToken(result.nextPageToken);\r\n      let videos = result.items;\r\n      let newVideoIdList = [];\r\n      videos.forEach(element => {\r\n        newVideoIdList.push(element.id.videoId);\r\n      });\r\n\r\n      youtube.getVideoList(newVideoIdList).then(videos => {\r\n        let channelIdList = [];\r\n        let newVideos = videos;\r\n        let newVideoList = [];\r\n        if(preQuery === query) {\r\n          newVideoList = searchedVideos.concat()\r\n        };\r\n        if(preQuery !== query) window.scrollTo(0, 0);\r\n\r\n        videos.forEach(element => {\r\n          channelIdList.push(element.snippet.channelId);\r\n        });\r\n\r\n        newVideoList = [...newVideoList, ...newVideos];\r\n        setSearchedVideos(newVideoList);\r\n\r\n        youtube.getChannelList(channelIdList).then(channels =>{\r\n          let newChannelList = preQuery !== query ? [] : searchedChannels.concat();\r\n          newChannelList = [...newChannelList, ...channels];\r\n          setSearchedChannels(newChannelList);\r\n        });\r\n      });\r\n    });\r\n  }, [youtube, preQuery, searchedChannels, searchedVideos]);\r\n\r\n  useEffect(() => {\r\n    const query = search.split(\"=\")[1];\r\n    onSearch(query);\r\n  }, [search]);\r\n\r\n  return(\r\n    <>\r\n      <SideMenu />\r\n      <VideoList videos={searchedVideos} channels={searchedChannels} display={'list'}/>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default SearchVideoList;","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube-mine\\src\\service\\infiniteScroll.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":89,"column":21,"nodeType":"93","endLine":89,"endColumn":57},{"ruleId":"91","severity":1,"message":"92","line":93,"column":25,"nodeType":"93","endLine":93,"endColumn":69},{"ruleId":"91","severity":1,"message":"92","line":52,"column":29,"nodeType":"93","endLine":52,"endColumn":73},{"ruleId":"91","severity":1,"message":"92","line":57,"column":37,"nodeType":"93","endLine":57,"endColumn":81},{"ruleId":"94","severity":1,"message":"95","line":19,"column":6,"nodeType":"96","endLine":19,"endColumn":15,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":21,"column":9,"nodeType":"99","endLine":23,"endColumn":4},{"ruleId":"94","severity":1,"message":"100","line":25,"column":6,"nodeType":"96","endLine":25,"endColumn":15,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"102","line":32,"column":6,"nodeType":"96","endLine":32,"endColumn":37,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"102","line":20,"column":6,"nodeType":"96","endLine":20,"endColumn":53,"suggestions":"104"},{"ruleId":"94","severity":1,"message":"105","line":64,"column":6,"nodeType":"96","endLine":64,"endColumn":14,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMostPopular'. Either include it or remove the dependency array.","ArrayExpression",["109"],"The 'paging' function makes the dependencies of useEffect Hook (at line 29) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'paging' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'getSelectedVideo'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has a missing dependency: 'paging'. Either include it or remove the dependency array.",["111"],["112"],"React Hook useEffect has a missing dependency: 'onSearch'. Either include it or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [getMostPopular, youtube]",{"range":"124","text":"125"},"Update the dependencies array to be: [getSelectedVideo, videoId]",{"range":"126","text":"127"},"Update the dependencies array to be: [videoNextPageToken, videoList, paging]",{"range":"128","text":"129"},"Update the dependencies array to be: [searchNextPageToken, preQuery, searchedVideos, paging]",{"range":"130","text":"131"},"Update the dependencies array to be: [onSearch, search]",{"range":"132","text":"133"},[666,675],"[getMostPopular, youtube]",[979,988],"[getSelectedVideo, videoId]",[1149,1180],"[videoNextPageToken, videoList, paging]",[758,805],"[searchNextPageToken, preQuery, searchedVideos, paging]",[2251,2259],"[onSearch, search]"]